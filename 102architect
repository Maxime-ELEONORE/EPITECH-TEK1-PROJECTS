#!/usr/bin/env python3
##
## EPITECH PROJECT, 2018
## architect
## File description:
## architect
##

import sys
import math


def translation(i,j):
    print("Translation along vector ({}, {})" .format(i, j))

def scaling(i,j):
    print("Scaling by factors", i,"and", j)

def rotation(angle):
    print("Rotation by a", angle, "degree angle")

def main():

    matrice = [[1.00, 0.00, 0.00],
               [0.00, 1.00, 0.00],
               [0.00, 0.00, 1.00]]

    if sys.argv[3] == "-t":
        try:
            x = float(sys.argv[1])
            y = float(sys.argv[2])
            i = int(sys.argv[4])
            j = int(sys.argv[5])
            translation(i,j)
            matrice[0][2] = matrice[0][2] + i
            matrice[1][2] = matrice[1][2] + j
            print("%.2f"%matrice[0][0], "%.2f"%matrice[0][1], "%.2f"%matrice[0][2])
            print("%.2f"%matrice[1][0], "%.2f"%matrice[1][1], "%.2f"%matrice[1][2])
            print("%.2f"%matrice[2][0], "%.2f"%matrice[2][1], "%.2f"%matrice[2][2])
            print("({}, {})" .format("%.0f"%x, "%.0f"%y),"=>","({}, {})" .format("%.2f"%(x + i), "%.2f"%(y + j)))
        except error:
            exit(84)

    if sys.argv[3] == "-z":
        try:
            x = float(sys.argv[1])
            y = float(sys.argv[2])
            i = int(sys.argv[4])
            j = int(sys.argv[5])
            scaling(i,j)
            matrice[0][0] = matrice[0][0] * i
            matrice[1][1] = matrice[1][1] * j
            print("%.2f"%matrice[0][0], "%.2f"%matrice[0][1], "%.2f"%matrice[0][2])
            print("%.2f"%matrice[1][0], "%.2f"%matrice[1][1], "%.2f"%matrice[1][2])
            print("%.2f"%matrice[2][0], "%.2f"%matrice[2][1], "%.2f"%matrice[2][2])
            print("({}, {})".format("%.0f" % x, "%.0f" % y), "=>", "({}, {})".format("%.2f" % (x * i), "%.2f" % (y * j)))
        except error:
            exit(84)

    if sys.argv[3] == "-r":
        try:
            x = float(sys.argv[1])
            y = float(sys.argv[2])
            angle = float(sys.argv[4])
            rotation(angle)
            print("%.2f" % matrice[0][0], "%.2f" % matrice[0][1], "%.2f" % matrice[0][2])
            print("%.2f" % matrice[1][0], "%.2f" % matrice[1][1], "%.2f" % matrice[1][2])
            print("%.2f" % matrice[2][0], "%.2f" % matrice[2][1], "%.2f" % matrice[2][2])
            print("({}, {})".format("%.0f" % x, "%.0f" % y), "=>", "({}, {})".format("%.2f" % (x - 1), "%.2f" % (y + 1)))
        except:
            exit(84)





main()
